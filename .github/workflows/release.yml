name: Build and Release

on:
  push:
    branches: [ release ]
    tags: [ 'v*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14-dev"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pytest pytest-cov flake8
          python -m pip install -e .[javascript]

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 tonnikala tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 tonnikala tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          python -m pytest -v

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          # Build for Python 3.8-3.14 (including latest dev version)
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-* cp314-*"
          # Skip 32-bit builds and musllinux i686 (PyPy not enabled by default in v3)
          CIBW_SKIP: "*-win32 *-musllinux_i686"
          # Use manylinux2014 for C extensions (Linux only)
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux2014
          CIBW_MANYLINUX_S390X_IMAGE: manylinux2014
          # Install test dependencies
          CIBW_TEST_REQUIRES: "pytest slimit3k ply"
          # Run tests
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          # Build settings
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    # Only upload on tags AND require manual approval via protected environment
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi-release
      url: https://pypi.org/project/tonnikala/
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten artifacts
        run: |
          find dist -name "*.whl" -exec mv {} dist/ \;
          find dist -name "*.tar.gz" -exec mv {} dist/ \;
          find dist -mindepth 1 -type d -exec rm -rf {} + 2>/dev/null || true
          ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # No password needed with OIDC trusted publisher
          skip-existing: true
